diff -Naur /tmp/geigerlog.orig/geigerlog ./geigerlog
--- /tmp/geigerlog.orig/geigerlog	2018-05-20 10:39:32.000000000 +0200
+++ ./geigerlog	2018-06-04 20:38:46.924943751 +0200
@@ -42,7 +42,6 @@
 import urllib.parse             # for use with Radiation World Map
 
 from PyQt4 import QtGui, QtCore
-from PyQt4.phonon import Phonon # used only for an error sound
 
 # Importing anything matplotlib results in this deprecation warning coming twice:
 # (order of matplotlib commands has no impact on the warning)
@@ -53,6 +52,8 @@
 #   import that binding first, or set the QT_API environment variable.
 #   mplDeprecation)
 import matplotlib
+import matplotlib as mpl
+mpl.use("Qt4Agg")
 from matplotlib import __version__ as mplVersion
 
 matplotlib.use('Qt4Agg', warn=True, force=False)    # use Qt4Agg, no the default TkAgg
@@ -1548,7 +1549,6 @@
 
         else: # source is device
             if gglobs.logging:
-                mediaErr.play()
                 lheader = header("Get History from Device")
                 self.print2NotePad(lheader)
                 fprint("Cannot load History from device with ongoing Logging. Stop Logging first", error= True)
@@ -2418,10 +2418,7 @@
 
                     vprint(gglobs.verbose, "Power is: ", PowerState)
 
-                    media.play()
-
                 else:
-                    mediaErr.play()
                     self.dbtnDeviceConnect.setChecked(False)
                     self.errprint2NotePad(errmessage)
                     self.print2NotePad("Connection failed. Try running 'USB Autodiscovery' from menu Help")
@@ -3225,8 +3222,6 @@
     def errprint2NotePad(self, *args):
         """print into Notepad area an error text in red and make sound"""
 
-        mediaErr.play()
-
         line = "<span style='color:red;'>{:35s} ".format(args[0])
         for s in range(1, len(args)):
             line += "{}".format(args[s])
@@ -3294,8 +3289,6 @@
     def showStatusMessage(self, message):
         """shows message by flashing the Status Bar red for 0.5 sec, then switches back to normal"""
 
-        mediaErr.play()
-
         self.statusBar.showMessage(message, 0)         # message remains until overwritten by next status
         self.statusBar.setStyleSheet("QStatusBar { background-color:red; color:white; }")
         QtGui.QApplication.processEvents()             #assure that things are visible
@@ -4847,7 +4840,7 @@
                 else:
                     # dir does not exist; make it
                     try:
-                        os.mkdir(testpath)
+                        os.makedirs(testpath)
                         gglobs.dataPath = testpath
                     except:
                         # dir cannot be made
@@ -5050,7 +5043,7 @@
 
 
 def main():
-    global usage, app, media, mediaErr, styles
+    global usage, app, styles
 
     # set directories and file names
     gglobs.progName     = getProgName()
@@ -5075,7 +5068,7 @@
     else:
         # dir does not exist; make it
         try:
-            os.mkdir(gglobs.dataPath )
+            os.makedirs(gglobs.dataPath)
         except:
             # dir cannot be made
             print("ERROR: main: Could not make data directory '{}'".format(gglobs.dataDirectory))
@@ -5165,21 +5158,6 @@
     # backend info
     vprint(gglobs.verbose, "matplotlib backend: ", matplotlib.get_backend())
 
-    """
-    Phonon:
-    Phonon searches the backend in a certain place!
-    The backend needs to be in the subdirectory "/phonon_backend/" of the qt library paths
-    (find out with: QCoreApplication::libraryPaths();)
-    so my solution was to put the backend-files from the "qt/plugins/phonon_backend/"-folder into
-    the folder in which I executed the programm - but in the subdirectory "/phonon_backend/"
-    NOTE: did not work!
-    """
-    if len(QtCore.QCoreApplication.libraryPaths()) == 0:
-        vprint(gglobs.verbose, "QCoreApplication.libraryPaths(): ", "No Library Paths")
-    else:
-        for a in QtCore.QCoreApplication.libraryPaths():
-            vprint(gglobs.verbose, "QCoreApplication.libraryPaths(): ", a)
-
     #
     # Styles:
     #
@@ -5238,31 +5216,6 @@
     # cumbersome with using tabs
     #app.setStyleSheet("QMessageBox { messagebox-text-interaction-flags: 5; }")
 
-    # sound file for message
-    media = Phonon.MediaObject()
-    # Next line results in this message, but seems to be a bug in KDE:
-    #   klauncher(3545) kdemain: No DBUS session-bus found.
-    #   Check if you have started the DBUS server.
-    #   kdeinit4: Communication error with launcher. Exiting!
-    audio = Phonon.AudioOutput(Phonon.MusicCategory)
-    Phonon.createPath(media, audio)
-    # the file could be set elsewhere,
-    # but currently only one is needed, so ok to do it here
-    #f = os.path.join(gglobs.gresPath, "sonar.ogg")
-    f = os.path.join(gglobs.gresPath, "bell.oga")
-    media.setCurrentSource(Phonon.MediaSource(f))
-
-    # sound file for Error message
-    mediaErr = Phonon.MediaObject()
-   # audio = Phonon.AudioOutput(Phonon.MusicCategory) # needed a 2nd time?
-    audio2 = Phonon.AudioOutput(Phonon.MusicCategory) # needed a 2nd time?Yes!
-    Phonon.createPath(mediaErr, audio2)
-    f = os.path.join(gglobs.gresPath, "bell.ogg")
-    mediaErr.setCurrentSource(Phonon.MediaSource(f))
-
-    gglobs.media    = media
-    gglobs.mediaErr = mediaErr
-
     # The configuration file may override some default options in gglobs.py
     readGeigerConfig()                       # reads the configuration file
 
diff -Naur /tmp/geigerlog.orig/gutils.py ./gutils.py
--- /tmp/geigerlog.orig/gutils.py	2018-05-19 14:52:06.000000000 +0200
+++ ./gutils.py	2018-06-04 20:30:57.845969697 +0200
@@ -71,7 +71,7 @@
 
 def getDataPath():
     """Return full path of the data directory"""
-    dp = os.path.join(getProgPath(), gglobs.dataDirectory)
+    dp = os.path.join(os.getenv("HOME"), ".geigerlog")
     return dp
 
 
@@ -258,7 +258,6 @@
             ps += str(args[s])
 
     if error :
-        gglobs.mediaErr.play()
         gglobs.NotePad.append("<span style='color:red;'>" + ps + "</span> ")
     else:
         gglobs.NotePad.append(ps)
